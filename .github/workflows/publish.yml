name: Publish

on:
  # Run on push events on primary branches
  push:
    branches:
      - main
    tags:
      - 'v*'

  # Run on pull request events
  pull_request:

  # Run on manual triggers
  workflow_dispatch:

# Set GITHUB_TOKEN permissions
permissions:
  contents: read

# Allow one concurrent deployment
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:

  # Build job
  build:
    name: Build Astro site artifact
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build for production
      run: docker compose -f docker-compose.yml -f docker-compose.cicd.yml build

    - name: Copy application files
      run: docker compose -f docker-compose.yml -f docker-compose.cicd.yml run --rm app

    - name: Upload dist folder
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: ./streamlit_dsfr/dist
        if-no-files-found: error

  # Release job
  release:
    name: Release version
    runs-on: ubuntu-latest
    timeout-minutes: 5

    # Dependencies
    needs:
      - build

    # Set GITHUB_TOKEN permissions
    permissions:
      contents: write

    # Set deployment environment
    environment:
      name: release
      url: ${{ steps.release-url.outputs.url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: ./dist

    - name: Set pre-release tag name
      id: prerelease-tag
      # Use timestamp as the tag
      run: echo "tag=t$(date +%s)" >> $GITHUB_OUTPUT

    - name: Create pre-release
      id: prerelease
      uses: softprops/action-gh-release@v1
      if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
      with:
        # Use the commit hash as the tag
        tag_name: ${{ steps.prerelease-tag.outputs.tag }}
        prerelease: true
        files: ./dist/*
        fail_on_unmatched_files: true
        generate_release_notes: true

    - name: Create release
      id: release
      uses: softprops/action-gh-release@v1
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        prerelease: false
        files: ./dist/*
        fail_on_unmatched_files: true
        generate_release_notes: true

    - name: Get release URL
      id: release-url
      run: |
        if [ -n "${{ steps.prerelease.outputs.url }}" ]; then
          echo "url=${{ steps.prerelease.outputs.url }}" >> $GITHUB_OUTPUT
        elif [ -n "${{ steps.release.outputs.url }}" ]; then
          echo "url=${{ steps.release.outputs.url }}" >> $GITHUB_OUTPUT
        else
          echo "url=" >> $GITHUB_OUTPUT
        fi
