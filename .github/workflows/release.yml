name: Publish

on:
  # Run on push events on primary branches
  push:
    branches:
      - main
    tags:
      - 'v*'

  # Run on manual triggers
  workflow_dispatch:

# Set GITHUB_TOKEN permissions
permissions:
  contents: read

# Allow one concurrent deployment
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:

  # Build job
  build:
    name: Build Astro site artifact
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Set outputs
    outputs:
      version: ${{ env.VERSION }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Set version tag for pre-release
      if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
      # Use datetime and short commit hash as the pre-release tag name
      run: echo "VERSION=t$(date +%Y%m%d.%H%M%S).${GITHUB_SHA::8}" >> $GITHUB_ENV
      env:
        GITHUB_SHA: ${{ github.sha }}

    - name: Set version tag for release
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      # Use the tag name as the release tag name, without the git ref prefix
      run: |
        VERSION=${GITHUB_REF##refs/tags/}
        VERSION=${VERSION##v}
        echo "VERSION=v$VERSION" >> $GITHUB_ENV
      env:
        GITHUB_REF: ${{ github.ref }}

    - name: Set VERSION file
      run: echo $VERSION > ./app/app/VERSION.txt
      env:
        VERSION: ${{ env.VERSION }}

    - name: Build for production
      run: docker compose -f docker-compose.yml -f docker-compose.cicd.yml build

    - name: Copy application files
      run: docker compose -f docker-compose.yml -f docker-compose.cicd.yml run --rm app

    - name: Upload dist folder
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: ./app/dist
        if-no-files-found: error

  # Release job
  release:
    name: Release version
    runs-on: ubuntu-latest
    timeout-minutes: 5

    # Dependencies
    needs:
      - build

    # Set GITHUB_TOKEN permissions
    permissions:
      contents: write

    # Set deployment environment
    environment:
      name: release
      url: ${{ steps.release.outputs.url }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: ./dist

    - name: Create release
      id: release
      uses: softprops/action-gh-release@v1
      with:
        # Use the version tag
        tag_name: ${{ needs.build.outputs.version }}
        # Set the release as non-prerelease if not triggered on a tag
        prerelease: ${{ ! startsWith(github.ref, 'refs/tags/') }}
        target_commitish: ${{ github.sha }}
        files: ./dist/*
        fail_on_unmatched_files: true
        generate_release_notes: true
